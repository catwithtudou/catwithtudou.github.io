<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>note - 标签 - </title>
        <link>https://zhengyua.cn/tags/note/</link>
        <description>note - 标签 - </description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>yu949812478@gmail.com (一直是阵雨🌦️)</managingEditor>
            <webMaster>yu949812478@gmail.com (一直是阵雨🌦️)</webMaster><lastBuildDate>Thu, 03 Mar 2022 09:24:00 &#43;0800</lastBuildDate><atom:link href="https://zhengyua.cn/tags/note/" rel="self" type="application/rss+xml" /><item>
    <title>ElasticSearch基本概念</title>
    <link>https://zhengyua.cn/posts/search_engine/es/1.html/</link>
    <pubDate>Thu, 03 Mar 2022 09:24:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zhengyua.cn/posts/search_engine/es/1.html/</guid>
    <description><![CDATA[文档（Document） Elasticsearch 是面向文档的，文档是所有可搜索数据的最小单位 文档会被序列化成 JSON 格式，保存在 Elasticsearch 中 JSON 对象由字段构成 每个字段都有对应的字]]></description>
</item><item>
    <title>ElasticSearch初识</title>
    <link>https://zhengyua.cn/posts/search_engine/es/0.html/</link>
    <pubDate>Mon, 28 Feb 2022 09:24:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zhengyua.cn/posts/search_engine/es/0.html/</guid>
    <description><![CDATA[ElasticSearch 简介 开源分布式搜索分析引擎 近实时（Near Real Time） 分布式存储/搜索/分析引擎 Elastic Search 起源是基于 Lucene 。Lucene 是基于 Java 开发的搜索引擎类库，]]></description>
</item><item>
    <title>《白话机器学习的数学》阅读笔记</title>
    <link>https://zhengyua.cn/posts/ai/machine_learning/0.html/</link>
    <pubDate>Sat, 26 Feb 2022 18:18:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zhengyua.cn/posts/ai/machine_learning/0.html/</guid>
    <description><![CDATA[概述 通过读取大量的数据、学习数据的特征并从中找出数据的模式。 这样的任务也被称为机器学习或者模式识别。 机器学习中比较擅长的任务： 回归（regr]]></description>
</item><item>
    <title>MIT6824LEC1笔记:Map Reduce</title>
    <link>https://zhengyua.cn/posts/distributed_structure/structure/3.html/</link>
    <pubDate>Sat, 29 Jan 2022 17:00:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zhengyua.cn/posts/distributed_structure/structure/3.html/</guid>
    <description><![CDATA[MIT6824LEC1笔记:Map Reduce 课程地址 代码实现repo地址 即课程Lab1。]]></description>
</item><item>
    <title>MIT6824LEC3笔记:GFS</title>
    <link>https://zhengyua.cn/posts/distributed_structure/structure/5.html/</link>
    <pubDate>Sat, 29 Jan 2022 17:00:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zhengyua.cn/posts/distributed_structure/structure/5.html/</guid>
    <description><![CDATA[GFS 课程地址 Before gfs why is distributed storage hard High performance -&gt; shard data over many servers Many servers -&gt; constant faults Fault tolerance -&gt; replication replication -&gt; potential inconsistencies Better consistency -&gt; low performance it can sum up the all thinking points like: performance fault tolerance replication consistency these points have connection and influence each other. what would we like for consistency? There are two conditions]]></description>
</item><item>
    <title>MIT6824LEC4笔记:Primary-Backup Replication</title>
    <link>https://zhengyua.cn/posts/distributed_structure/structure/1.html/</link>
    <pubDate>Sat, 29 Jan 2022 17:00:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zhengyua.cn/posts/distributed_structure/structure/1.html/</guid>
    <description><![CDATA[Primary/Backup Replication 课程地址 the note from the lecture Primary/Backup Replication for Fault Tolerance Case study of VMware FT, an extreme version of the idea fault tolerance to provide availability despite server and network failures using replication What kinds of failures can replication deal with? &ldquo;fail-stop&rdquo; failure of a single replica fan stops working, CPU overheats and shuts itself down someone trips over replica&rsquo;s power cord or network]]></description>
</item><item>
    <title>分布式系统架构的本质note</title>
    <link>https://zhengyua.cn/posts/distributed_structure/structure/0.html/</link>
    <pubDate>Sat, 29 Jan 2022 17:00:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zhengyua.cn/posts/distributed_structure/structure/0.html/</guid>
    <description><![CDATA[分布式系统架构的本质note 以下为左耳听风 记录的笔记。 为什么需要分布式系统 放弃传统的单体架构，选择分布式系统，主要有两方面原因： 增大系统容量]]></description>
</item><item>
    <title>弹力设计note</title>
    <link>https://zhengyua.cn/posts/distributed_structure/structure/6.html/</link>
    <pubDate>Sat, 29 Jan 2022 17:00:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zhengyua.cn/posts/distributed_structure/structure/6.html/</guid>
    <description><![CDATA[弹力设计note 以下为左耳听风 记录的笔记。 认识故障和弹力设计 系统可用性测量 分布式系统的容错设计，在英文中又叫Resiliency（弹力），即]]></description>
</item><item>
    <title>Go并发编程实战课笔记—Atomic</title>
    <link>https://zhengyua.cn/posts/golang/concurrent/0.html/</link>
    <pubDate>Sat, 29 Jan 2022 02:28:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zhengyua.cn/posts/golang/concurrent/0.html/</guid>
    <description><![CDATA[Go并发编程实战课笔记—Atomic 以下大多为鸟窝大佬的Go 并发编程实战课 中摘录的笔记 代码repo 原子操作基础 在并发编程中，很多场景中使用并]]></description>
</item><item>
    <title>Go并发编程实战课笔记—Channel</title>
    <link>https://zhengyua.cn/posts/golang/concurrent/1.html/</link>
    <pubDate>Sat, 29 Jan 2022 02:28:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zhengyua.cn/posts/golang/concurrent/1.html/</guid>
    <description><![CDATA[Go并发编程实战课笔记—Channel 以下大多为鸟窝大佬的Go 并发编程实战课 中摘录的笔记 代码repo 在channel的发展中关于CSP理论的]]></description>
</item></channel>
</rss>
