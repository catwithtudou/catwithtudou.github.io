<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>rpc - 标签 - </title>
        <link>https://zhengyua.cn/tags/rpc/</link>
        <description>rpc - 标签 - </description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>yu949812478@gmail.com (一直是阵雨🌦️)</managingEditor>
            <webMaster>yu949812478@gmail.com (一直是阵雨🌦️)</webMaster><lastBuildDate>Fri, 28 Jan 2022 18:51:06 &#43;0800</lastBuildDate><atom:link href="https://zhengyua.cn/tags/rpc/" rel="self" type="application/rss+xml" /><item>
    <title>netrpc源码阅读</title>
    <link>https://zhengyua.cn/posts/golang/rpc/1.html/</link>
    <pubDate>Fri, 28 Jan 2022 18:51:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zhengyua.cn/posts/golang/rpc/1.html/</guid>
    <description><![CDATA[netrpc源码阅读 [源码地址] Client.go 核心结构体： Call：主要表示调用RPC过程中的信息 Client：主要负责RPC客户端 gobClientC]]></description>
</item><item>
    <title>RPC框架设计概要</title>
    <link>https://zhengyua.cn/posts/golang/rpc/0.html/</link>
    <pubDate>Fri, 28 Jan 2022 18:50:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zhengyua.cn/posts/golang/rpc/0.html/</guid>
    <description><![CDATA[RPC框架设计概要 以下为个人理解，欢迎一起探讨 （个人理解）RPC 就是把拦截到的方法参数，转成可以在网络中传输的二进制，并保证在服务提供方能正]]></description>
</item></channel>
</rss>
